ServerRoot "/usr/local/apache2"

Listen 80

LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authn_file_module modules/mod_authn_file.so
LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule access_compat_module modules/mod_access_compat.so
LoadModule auth_basic_module modules/mod_auth_basic.so
LoadModule auth_form_module modules/mod_auth_form.so
LoadModule reqtimeout_module modules/mod_reqtimeout.so
LoadModule filter_module modules/mod_filter.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule env_module modules/mod_env.so
LoadModule headers_module modules/mod_headers.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule version_module modules/mod_version.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule status_module modules/mod_status.so
LoadModule autoindex_module modules/mod_autoindex.so
LoadModule dir_module modules/mod_dir.so
LoadModule alias_module modules/mod_alias.so
LoadModule session_module modules/mod_session.so
LoadModule session_cookie_module modules/mod_session_cookie.so
LoadModule session_crypto_module modules/mod_session_crypto.so
LoadModule request_module modules/mod_request.so

<IfModule unixd_module>
#
# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.  
#
# User/Group: The name (or #number) of the user/group to run httpd as.
# It is usually good practice to create a dedicated user and group for
# running httpd, as with most system services.
#
User www-data
Group www-data

</IfModule>


#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn't have a registered DNS name, enter its IP address here.
#
#ServerName www.example.com:80

#
# Deny access to the entirety of your server's filesystem. You must
# explicitly permit access to web content directories in other 
# <Directory> blocks below.
#
<Directory />
    AllowOverride none
    Require all denied
</Directory>

<Files ".ht*">
    Require all denied
</Files>

ErrorLog /proc/self/fd/2

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel debug


<IfModule headers_module>
    RequestHeader unset Proxy early
</IfModule>

<IfModule mime_module>
    TypesConfig conf/mime.types

    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz

</IfModule>

# Configure mod_proxy_html to understand HTML4/XHTML1
<IfModule proxy_html_module>
Include conf/extra/proxy-html.conf
</IfModule>

DocumentRoot "/usr/local/apache2/root"


<VirtualHost *:80>

    <Directory "/usr/local/apache2/root">
        Options Indexes FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>

    ProxyRequests off

    ProxyPreserveHost On

    # no proxy for /error/ (Apache HTTPd errors messages)
    ProxyPass /error/ !
    ProxyPass /login/ !
    ProxyPass /logout !

    ProxyPass / ${BACKEND_URL}/
    ProxyPassReverse / ${BACKEND_URL}/

    

    <Location />
        AuthFormProvider file
        AuthUserFile "conf/passwd"
        AuthType form
        AuthName "form"
        ErrorDocument 401 "/login/login.html"
        # AuthFormLoginRequiredLocation "http://example.com/login.html"

        Session On
        SessionCookieName session path=/
        SessionMaxAge 3600
        SessionExpiryUpdateInterval 10
        SessionCryptoPassphrase ${SESSION_SECRET}

        Require valid-user

    </Location>
    <Location /login>
        Require all granted
    </Location>
    <Location /doLogin>
        SetHandler form-login-handler
        AuthFormLoginSuccessLocation "/"
    </Location>
    <Location /logout>
        SetHandler form-logout-handler
        AuthFormLogoutLocation "/"

        Session on
        SessionCookieName session path=/
        SessionMaxAge 1
        SessionExpiryUpdateInterval 0
        SessionCryptoPassphrase ${SESSION_SECRET}
    </Location>

</VirtualHost>